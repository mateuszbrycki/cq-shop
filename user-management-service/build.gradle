buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
		maven { url "http://packages.confluent.io/maven/" }
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.15.1"

	}
}

plugins {
	id 'org.springframework.boot' version '2.0.6.RELEASE'
	id 'io.franzbecker.gradle-lombok' version '1.14'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'com.cqshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 11.0

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://packages.confluent.io/maven/" }
	jcenter()
}


ext {
	springCloudVersion = 'Finchley.RELEASE'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-webflux')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-integration')

	compile('org.springframework.cloud:spring-cloud-starter')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	compile('org.springframework.cloud:spring-cloud-starter-openfeign')
	compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-stream-binder-kafka')
	compile('org.springframework.cloud:spring-cloud-stream-schema')
	compile('org.springframework.cloud:spring-cloud-stream-reactive')

	compile('org.springframework.kafka:spring-kafka')
	compile("org.springframework.boot:spring-boot-devtools")

	compile('org.apache.avro:avro:1.8.2')
	compile('com.h2database:h2')
	compile('javax.xml.bind:jaxb-api:2.3.0')
	compile('org.apache.avro:avro:1.8.2')

	compile('org.apache.kafka:kafka-streams:2.1.0')

	compileOnly('org.projectlombok:lombok')

	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.cloud:spring-cloud-stream-test-support')
	testCompile('io.projectreactor:reactor-test')


	compile fileTree("../cq-common")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

task copyEventSchemasToResources(type: Copy) {
    from file("../avro/")
		include "*.avsc"
		exclude "*-AC.avsc"
		into file("./src/main/resources/schemas")
}

task copyEventSchemasToAvro(type: Copy) {
    from file("../avro/")
		include "*.avsc"
		exclude "*-AC.avsc"
	into file("./src/main/avro")
}

generateAvroJava.dependsOn(copyEventSchemasToResources)
generateAvroJava.dependsOn(copyEventSchemasToAvro)
